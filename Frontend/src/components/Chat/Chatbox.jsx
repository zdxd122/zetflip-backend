import PropTypes from "prop-types";
import { format } from "date-fns";
import "./Chatbox.css";
import { whale, owner } from "../../assets/imageExport";
import { useCallback } from "react";
import Profile from "../Popups/Profile";
import "flag-icons/css/flag-icons.min.css";

// Country flag mapping for chat messages
const flagMapping = {
  "ðŸ‡ºðŸ‡¸": "fi fi-us",
  "ðŸ‡¬ðŸ‡§": "fi fi-gb",
  "ðŸ‡¨ðŸ‡¦": "fi fi-ca",
  "ðŸ‡¦ðŸ‡º": "fi fi-au",
  "ðŸ‡©ðŸ‡ª": "fi fi-de",
  "ðŸ‡«ðŸ‡·": "fi fi-fr",
  "ðŸ‡®ðŸ‡¹": "fi fi-it",
  "ðŸ‡¯ðŸ‡µ": "fi fi-jp",
  "ðŸ‡°ðŸ‡·": "fi fi-kr",
  "ðŸ‡¨ðŸ‡³": "fi fi-cn",
  "ðŸ‡®ðŸ‡³": "fi fi-in",
  "ðŸ‡§ðŸ‡·": "fi fi-br",
  "ðŸ‡·ðŸ‡º": "fi fi-ru",
  "ðŸ‡ªðŸ‡¸": "fi fi-es",
  "ðŸ‡³ðŸ‡±": "fi fi-nl",
  "ðŸ‡§ðŸ‡ª": "fi fi-be",
  "ðŸ‡¨ðŸ‡­": "fi fi-ch",
  "ðŸ‡¦ðŸ‡¹": "fi fi-at",
  "ðŸ‡¸ðŸ‡ª": "fi fi-se",
  "ðŸ‡³ðŸ‡´": "fi fi-no",
  "ðŸ‡©ðŸ‡°": "fi fi-dk",
  "ðŸ‡«ðŸ‡®": "fi fi-fi",
  "ðŸ‡µðŸ‡±": "fi fi-pl",
  "ðŸ‡¨ðŸ‡¿": "fi fi-cz",
  "ðŸ‡­ðŸ‡º": "fi fi-hu",
  "ðŸ‡µðŸ‡¹": "fi fi-pt",
  "ðŸ‡¬ðŸ‡·": "fi fi-gr",
  "ðŸ‡¹ðŸ‡·": "fi fi-tr",
  "ðŸ‡²ðŸ‡½": "fi fi-mx",
  "ðŸ‡¦ðŸ‡·": "fi fi-ar",
  "ðŸ‡¨ðŸ‡´": "fi fi-co",
  "ðŸ‡¨ðŸ‡±": "fi fi-cl",
  "ðŸ‡µðŸ‡ª": "fi fi-pe",
  "ðŸ‡»ðŸ‡ª": "fi fi-ve",
  "ðŸ‡ªðŸ‡¨": "fi fi-ec",
  "ðŸ‡ºðŸ‡¾": "fi fi-uy",
  "ðŸ‡µðŸ‡¾": "fi fi-py",
  "ðŸ‡§ðŸ‡´": "fi fi-bo",
  "ðŸ‡¸ðŸ‡»": "fi fi-sv",
  "ðŸ‡¬ðŸ‡¹": "fi fi-gt",
  "ðŸ‡­ðŸ‡³": "fi fi-hn",
  "ðŸ‡³ðŸ‡®": "fi fi-ni",
  "ðŸ‡¨ðŸ‡·": "fi fi-cr",
  "ðŸ‡µðŸ‡¦": "fi fi-pa",
  "ðŸ‡©ðŸ‡´": "fi fi-do",
  "ðŸ‡¯ðŸ‡²": "fi fi-jm",
  "ðŸ‡­ðŸ‡¹": "fi fi-ht",
  "ðŸ‡¨ðŸ‡º": "fi fi-cu",
  "ðŸ‡µðŸ‡·": "fi fi-pr",
  "ðŸ‡§ðŸ‡§": "fi fi-bb",
  "ðŸ‡¹ðŸ‡¹": "fi fi-tt",
  "ðŸ‡¬ðŸ‡¾": "fi fi-gy",
  "ðŸ‡¸ðŸ‡·": "fi fi-sr",
  "ðŸ‡¦ðŸ‡¼": "fi fi-aw",
  "ðŸ‡§ðŸ‡¶": "fi fi-bq",
  "ðŸ‡¨ðŸ‡¼": "fi fi-cw",
  "ðŸ‡¸ðŸ‡½": "fi fi-sx",
  "ðŸ‡§ðŸ‡±": "fi fi-bl",
  "ðŸ‡¬ðŸ‡«": "fi fi-gf",
  "ðŸ‡¬ðŸ‡µ": "fi fi-gp",
  "ðŸ‡²ðŸ‡¶": "fi fi-mq",
  "ðŸ‡¾ðŸ‡¹": "fi fi-yt",
  "ðŸ‡·ðŸ‡ª": "fi fi-re",
  "ðŸ‡µðŸ‡«": "fi fi-pf",
  "ðŸ‡³ðŸ‡¨": "fi fi-nc",
  "ðŸ‡¼ðŸ‡«": "fi fi-wf",
  "ðŸ‡µðŸ‡²": "fi fi-pm",
  "ðŸ‡¬ðŸ‡±": "fi fi-gl",
  "ðŸ‡«ðŸ‡´": "fi fi-fo",
  "ðŸ‡¦ðŸ‡½": "fi fi-ax",
  "ðŸ‡®ðŸ‡¸": "fi fi-is",
  "ðŸ‡®ðŸ‡ª": "fi fi-ie",
  "ðŸ‡±ðŸ‡º": "fi fi-lu",
  "ðŸ‡²ðŸ‡¨": "fi fi-mc",
  "ðŸ‡±ðŸ‡®": "fi fi-li",
  "ðŸ‡¦ðŸ‡©": "fi fi-ad",
  "ðŸ‡¸ðŸ‡²": "fi fi-sm",
  "ðŸ‡»ðŸ‡¦": "fi fi-va",
  "ðŸ‡²ðŸ‡¹": "fi fi-mt",
  "ðŸ‡¨ðŸ‡¾": "fi fi-cy",
  "ðŸ‡§ðŸ‡¬": "fi fi-bg",
  "ðŸ‡·ðŸ‡´": "fi fi-ro",
  "ðŸ‡­ðŸ‡·": "fi fi-hr",
  "ðŸ‡¸ðŸ‡®": "fi fi-si",
  "ðŸ‡²ðŸ‡ª": "fi fi-me",
  "ðŸ‡·ðŸ‡¸": "fi fi-rs",
  "ðŸ‡²ðŸ‡°": "fi fi-mk",
  "ðŸ‡¦ðŸ‡±": "fi fi-al",
  "ðŸ‡½ðŸ‡°": "fi fi-xk",
  "ðŸ‡§ðŸ‡¦": "fi fi-ba",
  "ðŸ‡²ðŸ‡©": "fi fi-md",
  "ðŸ‡ªðŸ‡ª": "fi fi-ee",
  "ðŸ‡±ðŸ‡»": "fi fi-lv",
  "ðŸ‡±ðŸ‡¹": "fi fi-lt",
  "ðŸ‡§ðŸ‡¾": "fi fi-by",
  "ðŸ‡ºðŸ‡¦": "fi fi-ua",
  "ðŸ‡¬ðŸ‡ª": "fi fi-ge",
  "ðŸ‡¦ðŸ‡²": "fi fi-am",
  "ðŸ‡¦ðŸ‡¿": "fi fi-az",
  "ðŸ‡°ðŸ‡¿": "fi fi-kz",
  "ðŸ‡°ðŸ‡¬": "fi fi-kg",
  "ðŸ‡¹ðŸ‡¯": "fi fi-tj",
  "ðŸ‡¹ðŸ‡²": "fi fi-tm",
  "ðŸ‡ºðŸ‡¿": "fi fi-uz",
  "ðŸ‡²ðŸ‡³": "fi fi-mn",
  "ðŸ‡°ðŸ‡µ": "fi fi-kp",
  "ðŸ‡¹ðŸ‡¼": "fi fi-tw",
  "ðŸ‡­ðŸ‡°": "fi fi-hk",
  "ðŸ‡²ðŸ‡´": "fi fi-mo",
  "ðŸ‡¯ðŸ‡´": "fi fi-jo",
  "ðŸ‡±ðŸ‡§": "fi fi-lb",
  "ðŸ‡¸ðŸ‡¾": "fi fi-sy",
  "ðŸ‡®ðŸ‡¶": "fi fi-iq",
  "ðŸ‡°ðŸ‡¼": "fi fi-kw",
  "ðŸ‡¸ðŸ‡¦": "fi fi-sa",
  "ðŸ‡§ðŸ‡­": "fi fi-bh",
  "ðŸ‡¶ðŸ‡¦": "fi fi-qa",
  "ðŸ‡¦ðŸ‡ª": "fi fi-ae",
  "ðŸ‡´ðŸ‡²": "fi fi-om",
  "ðŸ‡¾ðŸ‡ª": "fi fi-ye",
  "ðŸ‡®ðŸ‡±": "fi fi-il",
  "ðŸ‡µðŸ‡¸": "fi fi-ps",
  "ðŸ‡ªðŸ‡¬": "fi fi-eg",
  "ðŸ‡±ðŸ‡¾": "fi fi-ly",
  "ðŸ‡©ðŸ‡¿": "fi fi-dz",
  "ðŸ‡²ðŸ‡¦": "fi fi-ma",
  "ðŸ‡¹ðŸ‡³": "fi fi-tn",
  "ðŸ‡ªðŸ‡­": "fi fi-eh",
  "ðŸ‡²ðŸ‡·": "fi fi-mr",
  "ðŸ‡²ðŸ‡±": "fi fi-ml",
  "ðŸ‡¸ðŸ‡³": "fi fi-sn",
  "ðŸ‡¬ðŸ‡²": "fi fi-gm",
  "ðŸ‡¬ðŸ‡³": "fi fi-gn",
  "ðŸ‡¸ðŸ‡±": "fi fi-sl",
  "ðŸ‡±ðŸ‡·": "fi fi-lr",
  "ðŸ‡¨ðŸ‡®": "fi fi-ci",
  "ðŸ‡§ðŸ‡«": "fi fi-bf",
  "ðŸ‡¹ðŸ‡¬": "fi fi-tg",
  "ðŸ‡§ðŸ‡¯": "fi fi-bj",
  "ðŸ‡³ðŸ‡ª": "fi fi-ne",
  "ðŸ‡³ðŸ‡¬": "fi fi-ng",
  "ðŸ‡¹ðŸ‡©": "fi fi-td",
  "ðŸ‡¨ðŸ‡²": "fi fi-cm",
  "ðŸ‡¨ðŸ‡«": "fi fi-cf",
  "ðŸ‡¬ðŸ‡¦": "fi fi-ga",
  "ðŸ‡¨ðŸ‡¬": "fi fi-cg",
  "ðŸ‡¦ðŸ‡´": "fi fi-ao",
  "ðŸ‡¬ðŸ‡¶": "fi fi-gq",
  "ðŸ‡¸ðŸ‡¹": "fi fi-st",
  "ðŸ‡¨ðŸ‡»": "fi fi-cv",
  "ðŸ‡¬ðŸ‡¼": "fi fi-gw",
  "ðŸ‡§ðŸ‡®": "fi fi-bi",
  "ðŸ‡·ðŸ‡¼": "fi fi-rw",
  "ðŸ‡¹ðŸ‡¿": "fi fi-tz",
  "ðŸ‡°ðŸ‡ª": "fi fi-ke",
  "ðŸ‡ºðŸ‡¬": "fi fi-ug",
  "ðŸ‡¸ðŸ‡´": "fi fi-so",
  "ðŸ‡©ðŸ‡¯": "fi fi-dj",
  "ðŸ‡ªðŸ‡¹": "fi fi-et",
  "ðŸ‡ªðŸ‡·": "fi fi-er",
  "ðŸ‡¸ðŸ‡¸": "fi fi-ss",
  "ðŸ‡¸ðŸ‡©": "fi fi-sd",
  "ðŸ‡¿ðŸ‡¦": "fi fi-za",
  "ðŸ‡§ðŸ‡¼": "fi fi-bw",
  "ðŸ‡¿ðŸ‡²": "fi fi-zm",
  "ðŸ‡¿ðŸ‡¼": "fi fi-zw",
  "ðŸ‡²ðŸ‡¼": "fi fi-mw",
  "ðŸ‡²ðŸ‡¿": "fi fi-mz",
  "ðŸ‡¸ðŸ‡¿": "fi fi-sz",
  "ðŸ‡±ðŸ‡¸": "fi fi-ls",
  "ðŸ‡³ðŸ‡¦": "fi fi-na",
  "ðŸ‡²ðŸ‡¬": "fi fi-mg",
  "ðŸ‡²ðŸ‡º": "fi fi-mu",
  "ðŸ‡¸ðŸ‡¨": "fi fi-sc",
  "ðŸ‡¹ðŸ‡´": "fi fi-to",
  "ðŸ‡¼ðŸ‡¸": "fi fi-ws",
  "ðŸ‡¸ðŸ‡§": "fi fi-sb",
  "ðŸ‡»ðŸ‡º": "fi fi-vu",
  "ðŸ‡³ðŸ‡·": "fi fi-nr",
  "ðŸ‡¹ðŸ‡»": "fi fi-tv",
  "ðŸ‡°ðŸ‡®": "fi fi-ki",
  "ðŸ‡²ðŸ‡­": "fi fi-mh",
  "ðŸ‡µðŸ‡¼": "fi fi-pw",
  "ðŸ‡«ðŸ‡²": "fi fi-fm",
  "ðŸ‡²ðŸ‡µ": "fi fi-mp",
  "ðŸ‡¬ðŸ‡º": "fi fi-gu",
  "ðŸ‡¦ðŸ‡¸": "fi fi-as",
  "ðŸ‡»ðŸ‡®": "fi fi-vi",
  "ðŸ‡ºðŸ‡²": "fi fi-um",
  "ðŸ‡²ðŸ‡¸": "fi fi-ms",
  "ðŸ‡¹ðŸ‡¨": "fi fi-tc",
  "ðŸ‡»ðŸ‡¬": "fi fi-vg",
  "ðŸ‡§ðŸ‡²": "fi fi-bm",
  "ðŸ‡°ðŸ‡¾": "fi fi-ky",
  "ðŸ‡¦ðŸ‡®": "fi fi-ai",
  "ðŸ‡«ðŸ‡°": "fi fi-fk",
  "ðŸ‡¬ðŸ‡¸": "fi fi-gs",
  "ðŸ‡¸ðŸ‡­": "fi fi-sh",
  "ðŸ‡®ðŸ‡´": "fi fi-io",
  "ðŸ‡µðŸ‡³": "fi fi-pn",
  "ðŸ‡¨ðŸ‡½": "fi fi-cx",
  "ðŸ‡¨ðŸ‡¨": "fi fi-cc",
  "ðŸ‡³ðŸ‡«": "fi fi-nf",
  "ðŸ‡¦ðŸ‡¶": "fi fi-aq",
  "ðŸ‡§ðŸ‡»": "fi fi-bv",
  "ðŸ‡­ðŸ‡²": "fi fi-hm",
  "ðŸ‡¹ðŸ‡«": "fi fi-tf"
};

// Function to process message text and convert flag emojis to flag icons
const processMessageText = (text) => {
  let processedText = text;

  // Replace flag emojis with flag icon spans
  Object.keys(flagMapping).forEach(flagEmoji => {
    const flagClass = flagMapping[flagEmoji];
    const flagSpan = `<span class="${flagClass}" style="font-size: 12px; display: inline-block; margin: 0 1px;"></span>`;
    processedText = processedText.replace(new RegExp(flagEmoji, 'g'), flagSpan);
  });

  return processedText;
};

export default function Chatbox({ Information, setModal }) {
  const loadProfile = useCallback(() => {
    setModal(
      <Profile
        closeModal={() => setModal(null)}
        userId={Information.robloxId}
      />
    );
  }, [Information, setModal]);
  if (Information.rank == "Owner") {
    return (
      <div className="Chatbox Owner">
        <img
          src={Information.thumbnail}
          alt="Roblox Avatar"
          onClick={loadProfile}
        />
        <div className="Content">
          <div className="Username">
            <div className="User">
              <img src={owner} alt="owner icon" />
              <h1>{Information.username}</h1>
            </div>
            <div className="Timestamp">
              <p>{format(Information.timestamp, "h:mm")}</p>
            </div>
          </div>
          <p
            className="message"
            dangerouslySetInnerHTML={{ __html: processMessageText(Information.message) }}
          ></p>
        </div>
      </div>
    );
  } else if (Information.rank == "Whale") {
    return (
      <div className="Chatbox Whale">
        <img
          src={Information.thumbnail}
          alt="Roblox Avatar"
          onClick={loadProfile}
        />
        <div className="Content">
          <div className="Username">
            <div className="User">
              <img src={whale} alt="whale icon" />
              <h1>{Information.username}</h1>
            </div>
            <div className="Timestamp">
              <p>{format(Information.timestamp, "h:mm")}</p>
            </div>
          </div>
          <p
            className="message"
            dangerouslySetInnerHTML={{ __html: processMessageText(Information.message) }}
          ></p>
        </div>
      </div>
    );
  } else {
    return (
      <div className="Chatbox">
        <img
          src={Information.thumbnail}
          alt="Roblox Avatar"
          onClick={loadProfile}
        />
        <div className="Content">
          <div className="Username">
            <h1>{Information.username}</h1>
            <div className="Timestamp">
              <p>{format(Information.timestamp, "h:mm")}</p>
            </div>
          </div>
          <p
            className="message"
            dangerouslySetInnerHTML={{ __html: processMessageText(Information.message) }}
          ></p>
        </div>
      </div>
    );
  }
}

Chatbox.propTypes = {
  Information: PropTypes.object,
  setModal: PropTypes.func,
};
